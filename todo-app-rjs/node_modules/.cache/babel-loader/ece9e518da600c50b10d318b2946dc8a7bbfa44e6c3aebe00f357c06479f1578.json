{"ast":null,"code":"var _jsxFileName = \"/Users/naman/Documents/React-JS/todo-app-rjs/src/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [emData, setEmData] = useState([]);\n  const [temp, setTemp] = useState(0);\n  const name = useRef(\"\");\n  const task = useRef(\"\");\n  const status = useRef(\"\");\n  let removeCharacter = index => {\n    let dt = emData.filter((employe, i) => {\n      return i !== index;\n    });\n    setEmData(dt);\n  };\n  let handleSubmit = async e => {\n    e.preventDefault();\n    let dt = emData;\n    dt.push({\n      name: name.current.value,\n      task: task.current.value,\n      status: status.current.value\n    });\n    setTemp(temp + 1);\n    name.current.value = \"\";\n    task.current.value = \"\";\n    status.current.value = \"In-Progress\";\n  };\n  useEffect(() => {\n    setEmData(emData);\n  }, [emData, temp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-data\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-css\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-css\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"NAME*\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-css\",\n            ref: name,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"TASK*\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-css\",\n            ref: task,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"STATUS*\", /*#__PURE__*/_jsxDEV(\"select\", {\n            defaultValue: status,\n            ref: status,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"In-Progress\",\n              children: \"In-Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Complete\",\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit-css\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"zWtiSwR1rm5ppGftmyllnKjjmbk=\");\n_c = Table;\nexport default Table;\n\n// useRef like when we say then only thing render which is not possible in useState() hooks\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","Table","_s","emData","setEmData","temp","setTemp","name","task","status","removeCharacter","index","dt","filter","employe","i","handleSubmit","e","preventDefault","push","current","value","className","children","onSubmit","ref","required","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","type","_c","$RefreshReg$"],"sources":["/Users/naman/Documents/React-JS/todo-app-rjs/src/Table.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst Table = () => {\n  const [emData, setEmData] = useState([]);\n  const [temp, setTemp] = useState(0);\n\n  const name = useRef(\"\");\n  const task = useRef(\"\");\n  const status = useRef(\"\");\n\n  let removeCharacter = (index) => {\n    let dt = emData.filter((employe, i) => {\n      return i !== index;\n    });\n    setEmData(dt);\n  };\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    let dt = emData;\n    dt.push({\n      name: name.current.value,\n      task: task.current.value,\n      status: status.current.value,\n    });\n    setTemp(temp + 1);\n    name.current.value = \"\";\n    task.current.value = \"\";\n    status.current.value = \"In-Progress\";\n  };\n\n  useEffect(() => {\n    setEmData(emData);\n  }, [emData, temp]);\n\n  return (\n    <div className=\"table-data\">\n      <form className=\"form-css\" onSubmit={handleSubmit}>\n        <div className=\"label-css\">\n          <label>\n            NAME*\n            <input className=\"input-css\" ref={name} required></input>\n          </label>\n\n          <label>\n            TASK*\n            <input className=\"input-css\" ref={task} required></input>\n          </label>\n\n          <label>\n            STATUS*\n            <select defaultValue={status} ref={status}>\n              <option value=\"In-Progress\">In-Progress</option>\n              <option value=\"Complete\">Complete</option>\n            </select>\n          </label>\n          <input className=\"submit-css\" type=\"submit\"></input>\n        </div>\n      </form>\n\n      {/* <table className=\"table-css\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Task</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {emData.map((row, index) => {\n            return (\n              <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.task}</td>\n                <td>{row.status}</td>\n                <td>\n                  <button onClick={() => removeCharacter(index)}>Delete</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table> */}\n    </div>\n  );\n};\n\nexport default Table;\n\n// useRef like when we say then only thing render which is not possible in useState() hooks\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}